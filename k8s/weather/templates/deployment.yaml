---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{.Values.replicas}}
  revisionHistoryLimit: {{.Values.revisionHistoryLimit}}
  # Стратегия развёртывания.
  # RollingUpdate, которая будет обновлять Pod'ы порциями
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app:  {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Chart.Name }}
    spec:
      containers:
        - name:  {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{.Values.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{ .Values.service.port }}
          env:
            - name: "DOTNET_ENVIRONMENT"
              value: "Development"
            - name: "ConnectionStrings__PgConnection"
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: PgConnection
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.livenessProbe.tcp_port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}


